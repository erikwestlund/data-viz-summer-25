---
title: "Git Troubleshooting"
author: "Erik Westlund"
date: "2025-06-11"
date-modified: "`r format(Sys.Date(), '%Y-%m-%d')`"
---

## GitHub Issues

Several students had trouble pushing to GitHub with their work.  Please try the following steps:

## Using The Command Line

If you having issues with RStudio's Git functionality, you can try using the command line. Click "Terminal" in the bottom left pane or select "Tools" > "Shell" > "Terminal" from the menu.

There you can use the following commands:

```bash
git add .
git commit -m "Your message"
git push
```

In general, I find that using the command line is more reliable than using RStudio's Git functionality. It is also faster.

## Authentication Issues

If you are having trouble getting GitHub to accept your push after providing it credentials, try the following:

1. Go to your GitHub account settings.
2. Click "Developer settings"
3. Click "Personal access tokens"
4. Click "Generate new token (Classic)""
5. Give it a name and description
6. Select all boxes on "repo"
7. Click "Generate token"
8. Copy the token
9. Use the token as your GitHub password when you push


## Remote Issues

GitHub is a `git` remote. A remote is a copy of a repository that is stored on a different server. If GitHub is your primary remote, it is conventional to call it `origin`.

Ensure your remote is set correctly.

First, check out which if any remotes are set:

```bash
git remote -v
```

If you see nothing, then run:

```bash
git remote add origin https://github.com/YOUR-USERNAME/data-viz-summer-25.git
```

If you see an unfamiliar remote, you can remove it with:

```bash
git remote remove origin
```

If you see a remote, you can set it to the correct one with:

```bash
git remote set-url origin https://github.com/YOUR-USERNAME/data-viz-summer-25.git
```

Note that the above call GitHub the `origin` remote.

## Branch Issues

Some installations will default to a `master` branch.  Community standards are moving away from the term `master` branch in favor of a `main` branch.  If you are using `master`, you can change it to `main` with:

```bash
git branch -m master main
```

Some commands I have used assume an `origin` remote and a `main` branch.  If you are using something else, you will need to adjust the commands accordingly.

You can then push or pull like so, assuming an `origin` remote is set:

```bash
git push origin main
git pull origin main
```

## Errors About The Materials In Your Repo Being More Up To Date

If you are receiving errors about the materials in your repo being more up to date than your local copy, you can try the following.

If you want to pull the latest materials from the repository, you can do so with the following command:

```bash
git pull origin main
```

This assumes you are using the `main` branch and an `origin` remote.  

It is good to ensure you have saved your work before pulling.

If you cannot push your work up, and you are absolutely certain you've never pushed any work up, you can force the materials in on the command line:

```bash
git push origin main --force
```

This will overwrite the materials in the repository with your current work.

